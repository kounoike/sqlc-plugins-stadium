package main

import (
	"bytes"
	"context"
	"text/template"

	"github.com/tabbed/sqlc-go/codegen"
)

const fixTmpl = `-- Code generated by sqlc-crud. DO NOT EDIT.
{{ range $i, $table := .Tables -}}
	{{- range $j, $column := $table.Columns -}}
{{- if eq $column.Name "created_at" }}ALTER TABLE {{$table.Rel.Name}} DROP created_at;
{{ end }}
{{- if eq $column.Name "updated_at" }}ALTER TABLE {{$table.Rel.Name}} DROP updated_at;
{{ end }}
	{{- end }}
{{- end }}
`

func main() {
	codegen.Run(generate)
}

func generate(_ context.Context, req *codegen.Request) (*codegen.Response, error) {
	tmpl := template.Must(template.New("fix").Parse(fixTmpl))

	res := codegen.CodeGenResponse{
		Files: []*codegen.File{},
	}

	for _, schema := range req.Catalog.Schemas {
		if schema.Name == req.Catalog.DefaultSchema {
			var b bytes.Buffer
			err := tmpl.Execute(&b, *schema)
			if err != nil {
				return nil, err
			}
			file := codegen.File{
				Name:     "fix_schema.up.sql",
				Contents: b.Bytes(),
			}
			res.Files = append(res.Files, &file)
		}
	}
	return &res, nil
}
