// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2
// source: blog.crud.sql

package table

import (
	"context"
)

const deleteBlog = `-- name: DeleteBlog :exec
DELETE FROM blog WHERE id = ?
`

func (q *Queries) DeleteBlog(ctx context.Context, id int32) error {
	_, err := q.db.ExecContext(ctx, deleteBlog, id)
	return err
}

const getBlog = `-- name: GetBlog :one
SELECT id, url, contents FROM blog WHERE id = ?
`

func (q *Queries) GetBlog(ctx context.Context, id int32) (Blog, error) {
	row := q.db.QueryRowContext(ctx, getBlog, id)
	var i Blog
	err := row.Scan(&i.ID, &i.Url, &i.Contents)
	return i, err
}

const insertBlog = `-- name: InsertBlog :exec

INSERT INTO blog (
	 url, contents
) VALUES (
	 ?, ?
)
`

type InsertBlogParams struct {
	Url      string `db:"url"`
	Contents string `db:"contents"`
}

// Code generated by sqlc-crud. DO NOT EDIT.
func (q *Queries) InsertBlog(ctx context.Context, arg InsertBlogParams) error {
	_, err := q.db.ExecContext(ctx, insertBlog, arg.Url, arg.Contents)
	return err
}
