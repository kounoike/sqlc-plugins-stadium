// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2
// source: blog_comment.crud.sql

package table

import (
	"context"
)

const deleteBlogComment = `-- name: DeleteBlogComment :exec
DELETE FROM blog_comment WHERE id = ?
`

func (q *Queries) DeleteBlogComment(ctx context.Context, id uint32) error {
	_, err := q.db.ExecContext(ctx, deleteBlogComment, id)
	return err
}

const getBlogComment = `-- name: GetBlogComment :one
SELECT id, guid, url, contents FROM blog_comment WHERE id = ?
`

func (q *Queries) GetBlogComment(ctx context.Context, id uint32) (BlogComment, error) {
	row := q.db.QueryRowContext(ctx, getBlogComment, id)
	var i BlogComment
	err := row.Scan(
		&i.ID,
		&i.Guid,
		&i.Url,
		&i.Contents,
	)
	return i, err
}

const getBlogCommentByGUID = `-- name: GetBlogCommentByGUID :one
SELECT id, guid, url, contents FROM blog_comment WHERE guid = ?
`

func (q *Queries) GetBlogCommentByGUID(ctx context.Context, guid string) (BlogComment, error) {
	row := q.db.QueryRowContext(ctx, getBlogCommentByGUID, guid)
	var i BlogComment
	err := row.Scan(
		&i.ID,
		&i.Guid,
		&i.Url,
		&i.Contents,
	)
	return i, err
}

const insertBlogComment = `-- name: InsertBlogComment :exec

INSERT INTO blog_comment (
	 guid, url, contents
) VALUES (
	 ?, ?, ?
)
`

type InsertBlogCommentParams struct {
	Guid     string `db:"guid"`
	Url      string `db:"url"`
	Contents string `db:"contents"`
}

// Code generated by sqlc-crud. DO NOT EDIT.
func (q *Queries) InsertBlogComment(ctx context.Context, arg InsertBlogCommentParams) error {
	_, err := q.db.ExecContext(ctx, insertBlogComment, arg.Guid, arg.Url, arg.Contents)
	return err
}

const updateBlogComment = `-- name: UpdateBlogComment :exec
UPDATE blog_comment SET
	 guid = ?, url = ?, contents = ?
WHERE id = ?
`

type UpdateBlogCommentParams struct {
	Guid     string `db:"guid"`
	Url      string `db:"url"`
	Contents string `db:"contents"`
	ID       uint32 `db:"id"`
}

func (q *Queries) UpdateBlogComment(ctx context.Context, arg UpdateBlogCommentParams) error {
	_, err := q.db.ExecContext(ctx, updateBlogComment,
		arg.Guid,
		arg.Url,
		arg.Contents,
		arg.ID,
	)
	return err
}
